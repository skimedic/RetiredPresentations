<Window
	x:Class="WPFDemo.E_DataBinding.Views.G_MasterDetail"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Helpers="clr-namespace:WPFDemo.E_DataBinding.Helpers"
	Title="MasterDetail"
	Height="488.146"
	Width="745.907">
	<Window.Resources>
		<Helpers:ProductListDisplayConverter
			x:Key="ProductListDisplayConverter" />
		<Helpers:PriceToBackgroundConverter
			x:Key="PriceBackgroundConverter"
			DefaultBrush="{x:Null}"
			HighlightBrush="Yellow"
			MinimumPriceToHighLight="40" />
		<Helpers:StockValueConverter
			x:Key="StockConverter" />
		<Helpers:AddNewProductConverter
			x:Key="NewProductConverter" />
		<Helpers:CloseCommandConverter
			x:Key="CloseCommandConverter" />
		<Style
			TargetType="{x:Type TextBox}">
			<Style.Triggers>
				<Trigger
					Property="Validation.HasError"
					Value="true">
					<Trigger.EnterActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimationUsingKeyFrames
									Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
									Duration="0:0:2">
									<LinearColorKeyFrame
										Value="Pink" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames
									Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)"
									Duration="0:0:2">
									<LinearColorKeyFrame
										Value="Red" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.EnterActions>
					<Trigger.ExitActions>
						<BeginStoryboard>
							<Storyboard>
								<ColorAnimationUsingKeyFrames
									Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
									Duration="0:0:.5">
									<LinearColorKeyFrame
										Value="White" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames
									Storyboard.TargetProperty="(TextBox.Foreground).(SolidColorBrush.Color)"
									Duration="0:0:.5">
									<LinearColorKeyFrame
										Value="Black" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard>
					</Trigger.ExitActions>
				</Trigger>
			</Style.Triggers>
			<Setter
				Property="Validation.ErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<DockPanel
							x:Name="ErrorTemplateDockPanel"
							LastChildFill="True"
							Height="{Binding ElementName=controlWithError, Path=ActualHeight}"
							Width="{Binding ElementName=controlWithError, Path=ActualWidth}"
							ToolTip="{Binding ElementName=controlWithError,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
							<TextBlock
								Name="ErrorAsterisk"
								DockPanel.Dock="Right"
								Foreground="Red"
								Opacity="0"
								FontSize="14pt"
								Margin="-15,0,0,0"
								FontWeight="Bold"
								Text="*" />
							<Border
								Opacity="0"
								Name="ErrorBorder"
								BorderBrush="Red"
								BorderThickness="1">
								<AdornedElementPlaceholder
									Name="controlWithError" />
							</Border>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger
								SourceName="ErrorTemplateDockPanel"
								Property="IsVisible"
								Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames
												Storyboard.TargetName="ErrorBorder"
												Storyboard.TargetProperty="(Border.Opacity)">
												<EasingDoubleKeyFrame
													KeyTime="0"
													Value="0" />
												<EasingDoubleKeyFrame
													KeyTime="0:0:1"
													Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												Storyboard.TargetProperty="(UIElement.Opacity)"
												Storyboard.TargetName="ErrorAsterisk">
												<EasingDoubleKeyFrame
													KeyTime="0"
													Value="0" />
												<EasingDoubleKeyFrame
													KeyTime="0:0:1"
													Value="1" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames
												Storyboard.TargetProperty="(Border.Opacity)"
												Storyboard.TargetName="ErrorBorder">
												<EasingDoubleKeyFrame
													KeyTime="0"
													Value="0" />
												<EasingDoubleKeyFrame
													KeyTime="0:0:1"
													Value="1" />
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames
												Storyboard.TargetProperty="(UIElement.Opacity)"
												Storyboard.TargetName="ErrorAsterisk">
												<EasingDoubleKeyFrame
													KeyTime="0"
													Value="0" />
												<EasingDoubleKeyFrame
													KeyTime="0:0:1"
													Value="1" />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Grid
		Name="MainGrid"
		Grid.IsSharedSizeScope="True">
		<Grid.RowDefinitions>
			<RowDefinition
				Height="Auto" />
			<RowDefinition
				Height="Auto" />
			<RowDefinition
				Height="*" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition
				Width="Auto"
				SharedSizeGroup="Label" />
			<ColumnDefinition
				Width="*" />
		</Grid.ColumnDefinitions>
		<Menu
			Grid.Column="0"
			Grid.Row="0"
			Grid.ColumnSpan="2">
			<MenuItem
				Header="_File">
				<MenuItem
					Header="_Close"
					Command=""
					CommandParameter="{Binding ElementName=cboProducts,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}" />
			</MenuItem>
			<MenuItem
				Header="_Edit">
				<MenuItem
					Header="_Save"
					Command="Save"
					CommandParameter="{Binding ElementName=cboProducts,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}" />
				<MenuItem
					Header="Ca_ncel"
					Command=""
					CommandParameter="{Binding ElementName=cboProducts,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}" />
				<MenuItem
					Header="_New"
					Command="New"
					CommandParameter="{Binding ElementName=cboCategories,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}" />
				<MenuItem
					Header="_Delete"
					Command="Delete"
					CommandParameter="{Binding ElementName=cboProducts,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}" />
			</MenuItem>
			<MenuItem
				Header="_Help">
				<MenuItem
					Header="_About" />
			</MenuItem>
		</Menu>
		<Label
			Grid.Column="0"
			Grid.Row="1"
			Margin="3">Category:</Label>
		<ComboBox
			Name="cboCategories"
			ItemsSource="{Binding Path=Categories}"
			Grid.Column="1"
			Grid.Row="1"
			Margin="3"
			DisplayMemberPath="CategoryName" />
		<Grid
			Grid.Row="2"
			Grid.ColumnSpan="2"
			Height="Auto"
			VerticalAlignment="Stretch"
			DataContext="{Binding ElementName=cboCategories, Path=SelectedItem, ValidatesOnNotifyDataErrors=False}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto"
					SharedSizeGroup="Label"
					MinWidth="100" />
				<ColumnDefinition
					Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition
					Height="Auto"></RowDefinition>
				<RowDefinition
					Height="*"></RowDefinition>
			</Grid.RowDefinitions>
			<Label
				Grid.Column="0"
				Grid.Row="0"
				Margin="3"
				HorizontalAlignment="Stretch">Product:</Label>
			<Grid 
				Grid.Column="1"
				Grid.Row="0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<ComboBox
				Name="cboProducts"
				HorizontalAlignment="Stretch"
					Width="Auto"
				ItemsSource="{Binding Path=ProductList}">
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<StackPanel
							Orientation="Horizontal"
							HorizontalAlignment="Left"
							FlowDirection="LeftToRight">
								<TextBlock
								Background="Transparent">
									<TextBlock.Text>
										<MultiBinding
										Converter="{StaticResource ProductListDisplayConverter}">
											<Binding
											Path="ModelName"
											ValidatesOnNotifyDataErrors="False" />
											<Binding
											Path="ModelNumber"
											ValidatesOnNotifyDataErrors="False" />
										</MultiBinding>
									</TextBlock.Text></TextBlock>
							</StackPanel>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			<StackPanel
				DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext, ValidatesOnNotifyDataErrors=False}"
				Orientation="Horizontal"
				HorizontalAlignment="Right"
				Grid.Column="1">
				<Button
					Name="cmdNew"
					Command="{Binding Path=AddNewProduct}"
					HorizontalAlignment="Right"
					Width="Auto"
					Content="_New"
					Margin="10,3,6,3"
					Padding="3">
					<Button.CommandParameter>
						<MultiBinding
							Converter="{StaticResource NewProductConverter}">
							<MultiBinding.Bindings>
								<Binding
									ElementName="cboCategories"
									Path="SelectedItem"
									ValidatesOnNotifyDataErrors="False" />
								<Binding
									ElementName="cboProducts"
									Path="SelectedItem"
									ValidatesOnNotifyDataErrors="False" />
							</MultiBinding.Bindings>
						</MultiBinding>
					</Button.CommandParameter>
				</Button>
				<Button
					Name="cmdDelete"
					Command="{Binding Path=Delete}"
					CommandParameter="{Binding ElementName=cboProducts, Path=SelectedItem, ValidatesOnNotifyDataErrors=False}"
					HorizontalAlignment="Right"
					Width="Auto"
					Content="_Delete"
					Margin="6,3,3,3"
					Padding="3" />
			</StackPanel>
			</Grid>
			<Grid
				Grid.Row="1"
				Grid.ColumnSpan="2"
				Name="ProductGrid"
				Height="Auto"
				VerticalAlignment="Stretch"
				DataContext="{Binding ElementName=cboProducts, Path=SelectedItem, ValidatesOnNotifyDataErrors=False}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition
						Width="Auto"
						SharedSizeGroup="Label" />
					<ColumnDefinition
						Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto"></RowDefinition>
					<RowDefinition
						Height="Auto"></RowDefinition>
					<RowDefinition
						Height="Auto"></RowDefinition>
					<RowDefinition
						Height="Auto"></RowDefinition>
					<RowDefinition
						Height="Auto"></RowDefinition>
					<RowDefinition
						Height="*"></RowDefinition>
					<RowDefinition
						Height="Auto"></RowDefinition>
				</Grid.RowDefinitions>
				<Label
					Margin="3"
					Grid.Column="0"
					Grid.Row="0">Model Number:</Label>
				<TextBox
					Margin="3"
					Grid.Column="1"
					Grid.Row="0">
					<TextBox.Text>
						<Binding
							Path="ModelNumber"
							UpdateSourceTrigger="PropertyChanged"
							ValidatesOnDataErrors="True"
							TargetNullValue="[Please Enter Model Number]">
							<Binding.ValidationRules>
								<!-- Default method for showing Exceptions thrown in Setters (ValidatesOnExceptions is shortcut) -->
								<ExceptionValidationRule />
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<Label
					Margin="3"
					Grid.Column="0"
					Grid.Row="1">Model Name:</Label>
				<TextBox
					Margin="3"
					Grid.Column="1"
					Grid.Row="1">
					<TextBox.Text>
						<Binding
							Path="ModelName"
							UpdateSourceTrigger="PropertyChanged"
							ValidatesOnDataErrors="True"
							TargetNullValue="[Please Enter Model Name]">
							<!-- Displays Errors for IDataErrorInfo  (ValidatesOnDataErrors is shortcut)
						<Binding.ValidationRules>
							<DataErrorValidationRule/>
						</Binding.ValidationRules> -->
						</Binding>
					</TextBox.Text>
				</TextBox>
				<Label
					Margin="3"
					Grid.Column="0"
					Grid.Row="2">Unit Cost:</Label>
				<Grid
					Grid.Column="1"
					Grid.Row="2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<!-- TODO Fix the error on negative unit cost -->
					<TextBox
						x:Name="textBox"
						Margin="3"
						Grid.Row="0"
						Grid.Column="0"
						Width="100"
						Background="{Binding Path=UnitCost,Converter={StaticResource PriceBackgroundConverter}, 
						ValidatesOnNotifyDataErrors=False}">
						<TextBox.Text>
							<!-- NotifyOnValidationError raises the Validation.Error event (it bubbles)-->
							<Binding
								Path="UnitCost"
								UpdateSourceTrigger="PropertyChanged"
								ValidatesOnDataErrors="True"
								NotifyOnValidationError="True"
								ValidatesOnExceptions="True">
								<Binding.Converter>
									<Helpers:CurrencyConverter />
								</Binding.Converter>
								<!-- This intercepts and blocks update to underlying POCO-->
								<Binding.ValidationRules>
									<Helpers:PositivePriceValidationRule
										MaxPrice="99.99"
										MinPrice="0.00" />
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>
					</TextBox>
					<Label
						Margin="3,3,3,0"
						Grid.Column="1">Inventory:</Label>
					<TextBox
						Margin="3"
						Grid.Row="0"
						Grid.Column="2"
						Width="100">
						<TextBox.Text>
							<Binding
								Path="UnitsInStock"
								UpdateSourceTrigger="PropertyChanged"
								ValidatesOnDataErrors="True"
								TargetNullValue="[Please Enter Units In Stock]" />
						</TextBox.Text>
					</TextBox>
					<Label
						Margin="3,3,3,0"
						Grid.Column="3">Stock Value:</Label>
					<TextBox
						Margin="3,3,3,0"
						Grid.Row="0"
						Grid.Column="4"
						Width="75"
						IsReadOnly="True">
						<TextBox.Text>
							<MultiBinding
								Converter="{StaticResource StockConverter}">
								<Binding
									Path="UnitCost" />
								<Binding
									Path="UnitsInStock" />
							</MultiBinding>
						</TextBox.Text>
					</TextBox>
				</Grid>
				<Label
					Margin="3,3,3,0"
					Grid.Row="4">Description:</Label>
				<StackPanel
					Grid.Row="4"
					DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext}"
					HorizontalAlignment="Stretch"
					FlowDirection="RightToLeft"
					Grid.ColumnSpan="2"
					Orientation="Horizontal"
					Height="Auto">
					<Button
						Height="Auto"
						Name="cmdLinkedDetailForm"
						Width="Auto"
						Command="{Binding Path=LinkedDetail}"
						CommandParameter="{Binding ElementName=cboProducts, Path=SelectedItem, ValidatesOnNotifyDataErrors=False}">Linked Detail Form</Button>
				</StackPanel>
				<TextBox
					Margin="7"
					Grid.Row="5"
					Grid.Column="0"
					Grid.ColumnSpan="2"
					TextWrapping="Wrap"
					VerticalAlignment="Stretch"
					Text="{Binding Path=Description,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True,TargetNullValue=[Please Enter Description]}"></TextBox>
				<Grid
					Grid.Column="0"
					Grid.Row="6"
					Grid.ColumnSpan="2"
					DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext}">
					<StackPanel
						Grid.Column="0"
						Grid.Row="0"
						HorizontalAlignment="Left"
						FlowDirection="LeftToRight"
						Orientation="Horizontal"
						Height="Auto">
						<Button
							Name="cmdAlterPrice"
							Content="Change _Price"
							Margin="3,3,3,3"
							Padding="3"
							Command="{Binding Path=UpdatePrice}"
							CommandParameter="{Binding ElementName=cboProducts,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}" />
					</StackPanel>
					<StackPanel
						Grid.Column="0"
						Grid.Row="0"
						HorizontalAlignment="Stretch"
						FlowDirection="RightToLeft"
						Orientation="Horizontal"
						Height="Auto">
						<Button
							Name="cmdClose"
							Content="_Close"
							Command="{Binding Path=Close}"
							Margin="3,3,3,3"
							Padding="3">
							<Button.CommandParameter>
								<MultiBinding
									Converter="{StaticResource CloseCommandConverter}">
									<MultiBinding.Bindings>
										<Binding
											RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Window}}" />
										<Binding
											ElementName="cboProducts"
											Path="SelectedItem"
											ValidatesOnNotifyDataErrors="False" />
									</MultiBinding.Bindings>
								</MultiBinding>
							</Button.CommandParameter>
						</Button>
						<Button
							Name="cmdSave"
							Content="_Save"
							Command="{Binding Path=Save}"
							CommandParameter="{Binding ElementName=cboProducts,Path=SelectedItem, ValidatesOnNotifyDataErrors=False}"
							Margin="3,3,3,3"
							Padding="3" />
					</StackPanel>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</Window>